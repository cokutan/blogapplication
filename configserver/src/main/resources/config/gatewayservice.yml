server:
  port: '8082'
  forward-headers-strategy: framework
spring:
  application:
    name: gatewayservice
  codec:
    log-request-details: true
  cloud:
    client:
      hostname: cloud-host
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:{server.port}"
            allowedHeaders: "*"
            allowedMethods:
            - GET
      default-filters:
        - TokenRelay
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      routes:
      - id: userOperations
        uri: http://${USER_OPERATIONS_HOST:localhost}:9010
        predicates:
          - Path=/usermanagement/**
        filters:
          - RewritePath=/usermanagement/(?<path>.*), /$\{path}
      - id: fileOperations
        uri: lb://blogapp-webflux
        predicates:
          - Path=/file/**
        filters:
          - RewritePath=/file/(?<path>.*), /$\{path}
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 10
              redis-rate-limiter.burstCapacity: 20
              redis-rate-limiter.requestedTokens: 1
              deny-empty-key: 'false'
      - id: blogOperations
        uri: http://${BLOG_OPERATIONS_HOST:localhost}:9009
        predicates:
          - Path=/blogapp/**
        filters:
          - RewritePath=/blogapp/(?<path>.*), /$\{path}
      - id: openapi
        uri: http://localhost:${server.port}
        predicates:
          - Path=/v3/api-docs/**
        filters:
          - RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak.docker.internal:8080/auth/realms/blogapp
      client:
        provider:
          keycloak:
            token-uri: http://keycloak.docker.internal:8080/auth/realms/blogapp/protocol/openid-connect/token
            authorization-uri: http://keycloak.docker.internal:8080/auth/realms/blogapp/protocol/openid-connect/auth
            userinfo-uri: http://keycloak.docker.internal:8080/auth/realms/blogapp/protocol/openid-connect/userinfo
            user-name-attribute: sub
            enable-cors: true
        registration:
          blogapp:
            provider: keycloak
            client-id: blogapp
            client-secret: FsZL17sZd2cSp7bSnCrDdIcS6yuqefC6
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/blogapp"


#Publish Application(Register with Eureka)
eureka:
  client:
    service-url:
      default-zone: http://${DISCOVERY_SERVICE_HOST:localhost}:8761/eureka

springdoc:
  swagger-ui:
   # use-root-path: true
    urls:
      - name: blogapp
        url: /v3/api-docs/blogapp
      - name: blogapp-webflux
        url: /v3/api-docs/file
      - name: blogapp-usermanagement
        url: /v3/api-docs/usermanagement

logging.level:
  org.springframework.cloud.gateway: TRACE
  org.springframework.security: DEBUG
  org.springframework.web.reactive.function.client: TRACE
  org.springframework.web.cors.reactive.DefaultCorsProcessor: DEBUG
  org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: TRACE
  org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE
  org.springframework.web.cors.DefaultCorsProcessor: TRACE